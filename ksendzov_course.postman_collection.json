{
	"info": {
		"_postman_id": "29ed9bc0-6931-4a95-9d19-22d8fb956ccf",
		"name": "ksendzov course",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25667287",
		"_collection_link": "https://lively-rocket-870954.postman.co/workspace/Team-Workspace~8a08d26b-16e6-4597-8ffb-19a0a3d88d06/collection/25667287-29ed9bc0-6931-4a95-9d19-22d8fb956ccf?action=share&creator=25667287&source=collection_link"
	},
	"item": [
		{
			"name": "HW1",
			"item": [
				{
					"name": "EP_1",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "162.55.220.72:5005/get_method?name=Alex&age=30",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"get_method"
							],
							"query": [
								{
									"key": "name",
									"value": "Alex"
								},
								{
									"key": "age",
									"value": "30"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EP_2",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Bella",
									"type": "text"
								},
								{
									"key": "age",
									"value": "30",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "200",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "162.55.220.72:5005/user_info_3",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"user_info_3"
							]
						}
					},
					"response": []
				},
				{
					"name": "EP_3",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "162.55.220.72:5005/object_info_1?name=Bella&age=30&weight=60",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_1"
							],
							"query": [
								{
									"key": "name",
									"value": "Bella"
								},
								{
									"key": "age",
									"value": "30"
								},
								{
									"key": "weight",
									"value": "60"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EP_4",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "162.55.220.72:5005/object_info_2?name=Bella&age=30&salary=500",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_2"
							],
							"query": [
								{
									"key": "name",
									"value": "Bella"
								},
								{
									"key": "age",
									"value": "30"
								},
								{
									"key": "salary",
									"value": "500"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EP_5",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "162.55.220.72:5005/object_info_3?name=Bella&age=33&salary=400",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_3"
							],
							"query": [
								{
									"key": "name",
									"value": "Bella"
								},
								{
									"key": "age",
									"value": "33"
								},
								{
									"key": "salary",
									"value": "400"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EP_6",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "162.55.220.72:5005/object_info_4?name=bella&age=33&salary=300",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_4"
							],
							"query": [
								{
									"key": "name",
									"value": "bella"
								},
								{
									"key": "age",
									"value": "33"
								},
								{
									"key": "salary",
									"value": "300"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EP_7",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "jagellon",
									"type": "text"
								},
								{
									"key": "age",
									"value": "44",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "51",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "162.55.220.72:5005/user_info_2",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"user_info_2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "HW2",
			"item": [
				{
					"name": "1",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/first",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"first"
							]
						}
					},
					"response": []
				},
				{
					"name": "2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//var jsonData = pm.response.json();\r",
									"let req_f = request.data\r",
									"let resp_f = pm.response.json();\r",
									"let req_name = req_f.name\r",
									"let resp_name = resp_f.name\r",
									"let req_age = req_f.age\r",
									"let resp_age = resp_f.age\r",
									"let req_salary = +req_f.salary\r",
									"let resp_salary = resp_f.salary\r",
									"let resp_salary_1_5_year = resp_f.family.u_salary_1_5_year\r",
									"\r",
									"pm.test(\"Check name hard\", function () {\r",
									"    pm.expect(resp_name).to.eql(\"bella\");\r",
									"});\r",
									"pm.test(\"Check age hard\", function () {\r",
									"    pm.expect(resp_age).to.eql(\"40\");\r",
									"});\r",
									"pm.test(\"Check salary hard\", function () {\r",
									"    pm.expect(resp_salary).to.eql(200);\r",
									"});\r",
									"pm.test(\"Check name\", function () {\r",
									"    pm.expect(resp_name).to.eql(req_name);\r",
									"});\r",
									"pm.test(\"Check age\", function () {\r",
									"    pm.expect(resp_age).to.eql(req_age);\r",
									"});\r",
									"pm.test(\"Check salary\", function () {\r",
									"    pm.expect(resp_salary).to.eql(req_salary);\r",
									"});\r",
									"console.log(resp_f.family);\r",
									"pm.test(\"Check salary_1_5_year\", function () {\r",
									"    pm.expect(resp_salary_1_5_year).to.eql(req_salary*4);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "bella",
									"type": "text"
								},
								{
									"key": "age",
									"value": "40",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "200",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{ip_server}}/user_info_3",
							"host": [
								"{{ip_server}}"
							],
							"path": [
								"user_info_3"
							]
						}
					},
					"response": []
				},
				{
					"name": "3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let req_f = pm.request.url.query.toObject() \r",
									"let resp_f = pm.response.json();\r",
									"let req_name = req_f.name\r",
									"let resp_name = resp_f.name\r",
									"let req_age = req_f.age\r",
									"let resp_age = resp_f.age\r",
									"let req_salary = +req_f.salary\r",
									"let resp_salary = resp_f.salary\r",
									"\r",
									"pm.test(\"Check name\", function () {\r",
									"    pm.expect(req_name).to.eql(resp_name);\r",
									"});\r",
									"pm.test(\"Check age\", function () {\r",
									"    pm.expect(resp_age).to.eql(req_age);\r",
									"});\r",
									"pm.test(\"Check salary\", function () {\r",
									"    pm.expect(resp_salary).to.eql(req_salary);\r",
									"});\r",
									"console.log(resp_f.family);\r",
									"pm.test(\"Have dog name property\", function () {\r",
									"    pm.expect(resp_f.family.pets.dog).to.have.property(\"name\");\r",
									"});\r",
									"pm.test(\"Have dog age property\", function () {\r",
									"    pm.expect(resp_f.family.pets.dog).to.have.property(\"age\");\r",
									"});\r",
									"pm.test(\"Check dog's name\", function () {\r",
									"    pm.expect(resp_f.family.pets.dog.name).to.eql(\"Luky\");\r",
									"});\r",
									"pm.test(\"Check dog's age\", function () {\r",
									"    pm.expect(resp_f.family.pets.dog.age).to.eql(4);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "ozzy",
									"type": "text",
									"disabled": true
								},
								{
									"key": "age",
									"value": "66",
									"type": "text",
									"disabled": true
								},
								{
									"key": "salary",
									"value": "666",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/object_info_3?name=ozzy&age=66&salary=666",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_3"
							],
							"query": [
								{
									"key": "name",
									"value": "ozzy"
								},
								{
									"key": "age",
									"value": "66"
								},
								{
									"key": "salary",
									"value": "666"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let req_f = pm.request.url.query.toObject() \r",
									"let resp_f = pm.response.json();\r",
									"let req_name = req_f.name\r",
									"let resp_name = resp_f.name\r",
									"let req_age = +req_f.age\r",
									"let resp_age = resp_f.age\r",
									"let resp_salary_2 = +resp_f.salary[1]\r",
									"let resp_salary_3 = +resp_f.salary[2]\r",
									"\r",
									"pm.test(\"Check name\", function () {\r",
									"    pm.expect(req_name).to.eql(resp_name);\r",
									"});\r",
									"pm.test(\"Check age\", function () {\r",
									"    pm.expect(req_age).to.eql(resp_age);\r",
									"});\r",
									"console.log(req_f.salary)\r",
									"console.log(resp_f.salary)\r",
									"console.log(resp_f.salary[0])\r",
									"console.log(resp_f.salary[1])\r",
									"console.log(resp_f.salary[2])\r",
									"\r",
									"pm.test(\"Check salary-1\", function () {\r",
									"    pm.expect(+req_f.salary).to.eql(resp_f.salary[0]);\r",
									"});\r",
									"\r",
									"pm.test(\"Check salary-2\", function () {\r",
									"    pm.expect(+req_f.salary*2).to.eql(resp_salary_2);\r",
									"});\r",
									"pm.test(\"Check salary-3\", function () {\r",
									"    pm.expect(+req_f.salary*3).to.eql(resp_salary_3);\r",
									"});\r",
									"\r",
									"pm.environment.set('name', resp_f.name);\r",
									"pm.environment.set('age', resp_f.age);\r",
									"pm.environment.set('salary', req_f.salary);\r",
									"\r",
									"for (i=0; i<resp_f.salary.length; i++) {\r",
									"console.log(resp_f.salary[i])}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/object_info_4?name=ozzy&age=66&salary=666",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_4"
							],
							"query": [
								{
									"key": "name",
									"value": "ozzy"
								},
								{
									"key": "age",
									"value": "66"
								},
								{
									"key": "salary",
									"value": "666"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let req = request.data\r",
									"let resp = pm.response.json();\r",
									"let keys = Object.keys(resp.person)\r",
									"let values = Object.values(resp.person)\r",
									"\r",
									"pm.test(\"Check salary\", function () {\r",
									"    pm.expect(resp).to.have.property(\"start_qa_salary\");\r",
									"});\r",
									"pm.test(\"Check salary 6+ month\", function () {\r",
									"    pm.expect(resp).to.have.property(\"qa_salary_after_6_months\");\r",
									"});\r",
									"pm.test(\"Check salary 12+ month\", function () {\r",
									"    pm.expect(resp).to.have.property(\"qa_salary_after_12_months\");\r",
									"});\r",
									"pm.test(\"Check salary 1.5+ years\", function () {\r",
									"    pm.expect(resp).to.have.property(\"qa_salary_after_1.5_year\");\r",
									"});\r",
									"pm.test(\"Check salary 3.5+ years\", function () {\r",
									"    pm.expect(resp).to.have.property(\"qa_salary_after_3.5_years\");\r",
									"});\r",
									"pm.test(\"Check person response\", function () {\r",
									"    pm.expect(resp).to.have.property(\"person\");\r",
									"});\r",
									"pm.test(\"Check start qa salary\", function () {\r",
									"    pm.expect(+req.salary).to.eql(resp.start_qa_salary);\r",
									"});\r",
									"pm.test(\"Check salary 6+ month\", function () {\r",
									"    pm.expect(+req.salary*2).to.eql(resp.qa_salary_after_6_months);\r",
									"});\r",
									"pm.test(\"Check salary 12+ month\", function () {\r",
									"    pm.expect(+req.salary*2.7).to.eql(resp.qa_salary_after_12_months);\r",
									"});\r",
									"pm.test(\"Check salary 1.5+ years\", function () {\r",
									"    pm.expect(+req.salary*3.3).to.eql(resp[\"qa_salary_after_1.5_year\"]);\r",
									"});\r",
									"pm.test(\"Check salary 3.5+ years\", function () {\r",
									"    pm.expect(+req.salary*3.8).to.eql(resp[\"qa_salary_after_3.5_years\"]);\r",
									"});\r",
									"pm.test(\"Check u_name parameter equals to salary\", function () {\r",
									"    pm.expect(+req.salary).to.eql(resp.person.u_name[1]);\r",
									"});\r",
									"pm.test(\"Check u_age parameter equals to age\", function () {\r",
									"    pm.expect(+req.age).to.eql(resp.person.u_age);\r",
									"});\r",
									"pm.test(\"Check u_salary_5_years parameter\", function () {\r",
									"    pm.expect(+req.salary*4.2).to.eql(resp.person.u_salary_5_years);\r",
									"});\r",
									"for (i=0; i < keys.length; i++) {\r",
									"    console.log(\"key = \", keys[i], \" : \", \"value = \", values[i])}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "salary",
									"value": "{{salary}}",
									"type": "text"
								},
								{
									"key": "age",
									"value": "{{age}}",
									"type": "text"
								},
								{
									"key": "name",
									"value": "{{name}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/user_info_2",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"user_info_2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "HW3",
			"item": [
				{
					"name": "1",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "login",
									"value": "ozzy",
									"type": "text"
								},
								{
									"key": "password",
									"value": "1234",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/login",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let req = JSON.parse(request.data);\r",
									"let resp = pm.response.json();\r",
									"\r",
									"pm.test(\"1) Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"2) Check response JSON structure\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"3) Check salary multiplication result\", function () {\r",
									"    pm.expect(+req.salary*4).to.eql(resp.person.u_salary_1_5_year);\r",
									"    pm.expect(+req.salary*2.9).to.eql(resp.qa_salary_after_12_months);\r",
									"    pm.expect(+req.salary*2).to.eql(resp.qa_salary_after_6_months);\r",
									"    pm.expect(+req.salary*1).to.eql(resp.start_qa_salary);\r",
									"});\r",
									"\r",
									"postman.setEnvironmentVariable (\"u_salary_1.5_year\", resp.person.u_salary_1_5_year);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"age\" : {{age}},\r\n    \"salary\" : {{salary}},\r\n    \"name\" : \"{{name}}\",\r\n    \"auth_token\" : \"{{token}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://162.55.220.72:5005/user_info",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"user_info"
							]
						}
					},
					"response": []
				},
				{
					"name": "3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let req = request.data;\r",
									"let resp = pm.response.json();\r",
									"\r",
									"pm.test(\"1) Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"2) Check response JSON structure\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"3) Check salary multiplication result\", function () {\r",
									"    pm.expect(+req.salary).to.eql(resp.salary[0]);\r",
									"    pm.expect(req.salary*2).to.eql(+resp.salary[1]);\r",
									"    pm.expect(req.salary*3).to.eql(+resp.salary[2]);\r",
									"});\r",
									"\r",
									"pm.test(\"4)Check that 2nd array value is biggest\", function() {\r",
									"    pm.expect(+resp.salary[2]).to.greaterThan(resp.salary[0]);\r",
									"    pm.expect(+resp.salary[2]).to.greaterThan(+resp.salary[1]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "{{age}}",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "{{salary}}",
									"type": "text"
								},
								{
									"key": "name",
									"value": "\"{{name}}\"",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "\"{{token}}\"",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/new_data",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"new_data"
							]
						}
					},
					"response": []
				},
				{
					"name": "4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let req = request.data;\r",
									"let resp = pm.response.json();\r",
									"\r",
									"pm.test(\"1) Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"2) Check response JSON structure\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"3) Check weight multiplication result\", function () {\r",
									"    pm.expect(req.weight*0.012).to.eql(resp.daily_food);\r",
									"    pm.expect(req.weight*2.5).to.eql(resp.daily_sleep);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "{{age}}",
									"type": "text"
								},
								{
									"key": "weight",
									"value": "100",
									"type": "text"
								},
								{
									"key": "name",
									"value": "{{name}}",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/test_pet_info?",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"test_pet_info"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let req = request.data;\r",
									"let resp = pm.response.json();\r",
									"\r",
									"pm.test(\"1) Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"2) Check response JSON structure\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"3) Check field 'name' equality\", function() {\r",
									"    pm.expect(req.name).to.eql(resp.name);\r",
									"});\r",
									"\r",
									"pm.test(\"4) Check field 'age' equality\", function() {\r",
									"    pm.expect(req.age).to.eql(resp.age);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "{{age}}",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "{{u_salary_1.5_year}}",
									"type": "text"
								},
								{
									"key": "name",
									"value": "{{name}}",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/get_test_user",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"get_test_user"
							]
						}
					},
					"response": []
				},
				{
					"name": "6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let resp = pm.response.json();\r",
									"\r",
									"postman.setEnvironmentVariable (\"Cur_ID\", Math.floor(Math.random()*resp.length));\r",
									"\r",
									"//1) получить список валют\r",
									"// 2) итерировать список валют\r",
									"// 3) в каждой итерации отправлять запрос на сервер для получения курса каждой валюты\r",
									"// 4) если возвращается 500 код, переходим к следующей итреации\r",
									"// 5) если получаем 200 код, проверяем response json на наличие поля \"Cur_OfficialRate\"\r",
									"// 6) если поле есть, пишем в консоль инфу про фалюту в виде response\r",
									"// {\r",
									"//     \"Cur_Abbreviation\": str\r",
									"//     \"Cur_ID\": int,\r",
									"//     \"Cur_Name\": str,\r",
									"//     \"Cur_OfficialRate\": float,\r",
									"//     \"Cur_Scale\": int,\r",
									"//     \"Date\": str\r",
									"// }\r",
									"// 7) переходим к следующей итерации\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://54.157.99.22:80/currency",
							"protocol": "http",
							"host": [
								"54",
								"157",
								"99",
								"22"
							],
							"port": "80",
							"path": [
								"currency"
							]
						}
					},
					"response": []
				},
				{
					"name": "7",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1) Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"2) Check response JSON structure\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								},
								{
									"key": "curr_code",
									"value": "{{Cur_ID}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://54.157.99.22:80/curr_byn",
							"protocol": "http",
							"host": [
								"54",
								"157",
								"99",
								"22"
							],
							"port": "80",
							"path": [
								"curr_byn"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"variable": [
		{
			"key": "ip_server",
			"value": "http://162.55.220.72:5005"
		}
	]
}